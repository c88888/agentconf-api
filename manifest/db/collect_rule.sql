/*
Navicat MySQL Data Transfer

Source Server         : n9e
Source Server Version : 50738
Source Host           : 116.211.139.40:3306
Source Database       : n9e_v5

Target Server Type    : MYSQL
Target Server Version : 50738
File Encoding         : 65001

Date: 2024-12-12 17:03:51
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for collect_rule
-- ----------------------------
DROP TABLE IF EXISTS `collect_rule`;
CREATE TABLE `collect_rule` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `group_id` bigint(20) NOT NULL DEFAULT '0' COMMENT 'busi group id',
  `cluster` varchar(128) NOT NULL,
  `target_idents` text NOT NULL COMMENT 'ident list, split by space',
  `target_tags` varchar(512) NOT NULL DEFAULT '' COMMENT 'filter targets by tags, split by space',
  `name` varchar(191) NOT NULL DEFAULT '',
  `note` varchar(255) NOT NULL DEFAULT '',
  `step` int(11) NOT NULL,
  `type` varchar(64) NOT NULL COMMENT 'e.g. port proc log plugin',
  `data` text NOT NULL,
  `append_tags` varchar(255) NOT NULL DEFAULT '' COMMENT 'split by space: e.g. mod=n9e dept=cloud',
  `create_at` bigint(20) NOT NULL DEFAULT '0',
  `create_by` varchar(64) NOT NULL DEFAULT '',
  `update_at` bigint(20) NOT NULL DEFAULT '0',
  `update_by` varchar(64) NOT NULL DEFAULT '',
  `disabled` tinyint(1) NOT NULL DEFAULT '0' COMMENT '0:enabled 1:disabled',
  PRIMARY KEY (`id`),
  KEY `group_id` (`group_id`,`type`,`name`)
) ENGINE=InnoDB AUTO_INCREMENT=67 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Records of collect_rule
-- ----------------------------
INSERT INTO `collect_rule` VALUES ('45', '33', '', 'zy-zj-pro-matrix-admin-01 zy-zj-pro-matrix-erpcweb-01 zy-zj-pro-matrix-web-01 zy-zj-pro-matrix-dispatch-01 zy-zj-pro-matrix-webproxy-01', '', 'matrix-zj cdn ping', 'ping cdn节点', '0', 'ping', '# # collect interval\n# interval = 15\n\n[[instances]]\n# send ping packets to\ntargets = [\n\"10.0.3.65\",\n\"10.0.3.10\",\n\"10.0.3.102\",\n\"10.0.3.110\",\n\"10.0.3.111\",\n\"10.0.3.112\",\n\"10.0.3.113\",\n\"124.160.179.67\",\n\"124.160.179.15\",\n\"111.1.61.30\",\n\"101.71.132.190\",\n\"183.131.25.73\",\n\"183.131.25.71\",\n\"101.71.132.186\",\n\"111.1.61.29\",\n\"183.134.106.102\",\n\"183.134.106.90\",\n\"61.160.196.226\",\n\"61.160.196.237\",\n\"61.160.243.30\",\n\"61.160.243.79\",\n\"61.160.249.86\",\n\"61.160.249.87\",\n\"61.160.249.88\",\n\"61.160.249.89\",\n\"112.21.164.5\",\n\"61.160.249.91\",\n\"36.153.55.203\",\n\"112.82.242.45\",\n\"61.160.249.94\",\n\"116.211.100.137\",\n\"119.97.188.190\",\n\"119.97.188.138\",\n\"116.211.100.70\",\n\"116.211.100.71\",\n\"111.48.131.126\",\n\"111.48.131.70\",\n\"220.203.56.59\",\n\"220.203.56.60\",\n\"220.203.56.61\",\n\"220.203.56.62\",\n\"116.211.100.74\",\n\"111.48.131.254\",\n\"220.203.52.190\",\n#\"116.211.100.133\",//傲盾\n#\"116.211.100.134\",//傲盾\n\"59.175.145.5\",\n\"112.82.242.34\",\n\"61.160.249.90\",\n\"119.97.188.188\",\n\"119.97.188.189\",\n\"183.131.25.72\",\n\"111.1.61.28\",\n\"101.71.132.185\"\n]\nconcurrency = 60\n\n## Method used for sending pings, can be either \"exec\" or \"native\".  When set\n## to \"exec\" the systems ping command will be executed.  When set to \"native\"\n## the plugin will send pings directly.\n##\n## While the default is \"native\" for backwards compatibility, new deployments\n## are encouraged to use the \"native\" method for improved compatibility and\n## performance.\n# method = \"exec\"\n\n## Specify the ping executable binary.\n# binary = \"ping\"\n\n# # append some labels for series\n# labels = { region=\"cloud\", product=\"n9e\" }\n\n# # interval = global.interval * interval_times\n# interval_times = 1\n\n## Number of ping packets to send per interval.  Corresponds to the \"-c\"\n## option of the ping command.\n# count = 1\n\n## Time to wait between sending ping packets in seconds.  Operates like the\n## \"-i\" option of the ping command.\n# ping_interval = 1.0\n\n## If set, the time to wait for a ping response in seconds.  Operates like\n## the \"-W\" option of the ping command.\n# timeout = 3.0\n\n## Interface or source address to send ping from.  Operates like the -I or -S\n## option of the ping command.\n# interface = \"\"\n\n## Use only IPv6 addresses when resolving a hostname.\n# ipv6 = false\n\n## Number of data bytes to be sent. Corresponds to the \"-s\"\n## option of the ping command.\n# size = 56\n\n# max concurrency coroutine\n# concurrency = 50', '', '1732780766', '王杨(822032277)', '1733125303', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('46', '62', '', 'zy-zj-pro-weplay-mongodb-01.novalocal', '', 'mongo主库', 'mongo主库', '0', 'mongodb', '[[instances]]\n# log level, enum: panic, fatal, error, warn, warning, info, debug, trace, defaults to info.\nlog_level = \"info\"\n# append some const labels to metrics\n# NOTICE! the instance label is required for dashboards\nlabels = { instance=\"mongo-cluster-01\" }\n\n# mongodb dsn, see https://www.mongodb.com/docs/manual/reference/connection-string/\n# mongodb_uri = \"mongodb://127.0.0.1:27017\"\nmongodb_uri = \"mongodb://127.0.0.1:27017\"\n# if you don\'t specify the username or password in the mongodb_uri, you can set here. \n# This will overwrite the dsn, it would be helpful when special characters existing in the username or password and you don\'t want to encode them.\n# NOTICE! this user must be granted enough rights to query needed stats, see ../inputs/mongodb/README.md\nusername = \"username@Bj\"\npassword = \"password@Bj\"\n# if set to true, use the direct connection way\n# direct_connect = true\n\n# collect all means you collect all the metrics, if set, all below enable_xxx flags in this section will be ignored\ncollect_all = true\n# if set to true, collect databases metrics\n# enable_db_stats = true\n# if set to true, collect getDiagnosticData metrics\n# enable_diagnostic_data = true\n# if set to true, collect replSetGetStatus metrics\n# enable_replicaset_status = true\n# if set to true, collect top metrics by admin command\n# enable_top_metrics = true\n# if set to true, collect index metrics. You should specify one of the coll_stats_namespaces and the discovering_mode flags.\n# enable_index_stats = true\n# if set to true, collect collections metrics. You should specify one of the coll_stats_namespaces and the discovering_mode flags.\n# enable_coll_stats = true\n\n# Only get stats for the collections matching this list of namespaces. if none set, discovering_mode will be enabled.\n# Example: db1.col1,db.col1\n# coll_stats_namespaces = []\n# Only get stats for index with the collections matching this list of namespaces.\n# Example: db1.col1,db.col1\n# index_stats_collections = []\n# if set to true, replace -1 to DESC for label key_name of the descending_index metrics\n# enable_override_descending_index = true\n\n# which exposes metrics with 0.1x compatible metric names has been implemented which simplifies migration from the old version to the current version.\n# compatible_mode = true\n\n\n# [[instances]]\n# # interval = global.interval * interval_times\n# interval_times = 1\n\n# log_level = \"error\"\n\n# append some labels to metrics\n# labels = { instance=\"mongo-cluster-02\" }\n# mongodb_uri = \"mongodb://username:password@127.0.0.1:27017\"\n# collect_all = true\n# compatible_mode = true', '', '1732782033', '王杨(822032277)', '1733468667', '王杨(822032277)', '1');
INSERT INTO `collect_rule` VALUES ('47', '62', '', 'zy-zj-pro-weplay-web-02 zy-zj-pro-weplay-web-03 zy-zj-pro-weplay-web-04', '', 'springboot 8080', '8080', '0', 'net_response', '# # collect interval\n# interval = 15\n\n[mappings]\n# \"127.0.0.1:22\"= {region=\"local\",ssh=\"test\"}\n# \"127.0.0.1:22\"= {region=\"local\",ssh=\"redis\"}\n\n[[instances]]\ntargets = [\n    \"127.0.0.1:8080\",\n        \"127.0.0.1:802\"\n\n]\n\n# # append some labels for series\n# labels = { region=\"cloud\", product=\"n9e\" }\n\n# # interval = global.interval * interval_times\n# interval_times = 1\n\n## Protocol, must be \"tcp\" or \"udp\"\n## NOTE: because the \"udp\" protocol does not respond to requests, it requires\n## a send/expect string pair (see below).\n# protocol = \"tcp\"\n\n## Set timeout\n# timeout = \"1s\"\n\n## Set read timeout (only used if expecting a response)\n# read_timeout = \"1s\"\n\n## The following options are required for UDP checks. For TCP, they are\n## optional. The plugin will send the given string to the server and then\n## expect to receive the given \'expect\' string back.\n## string sent to the server\n# send = \"ssh\"\n## expected string in answer\n# expect = \"ssh', '', '1732782100', '王杨(822032277)', '1733468671', '王杨(822032277)', '1');
INSERT INTO `collect_rule` VALUES ('48', '42', '', 'zy-wh-fat-utils-test-05', '', 'ping1', 'ping1', '0', 'ping', '# # collect interval\n# interval = 15\n\n[[instances]]\n# send ping packets to\ntargets = [\n\"127.0.0.1\",\n\"10.0.45.27\"\n]\n\n## Method used for sending pings, can be either \"exec\" or \"native\".  When set\n## to \"exec\" the systems ping command will be executed.  When set to \"native\"\n## the plugin will send pings directly.\n##\n## While the default is \"native\" for backwards compatibility, new deployments\n## are encouraged to use the \"native\" method for improved compatibility and\n## performance.\n# method = \"exec\"\n\n## Specify the ping executable binary.\n# binary = \"ping\"\n\n# # append some labels for series\n# labels = { region=\"cloud\", product=\"n9e\" }\n\n# # interval = global.interval * interval_times\n# interval_times = 1\n\n## Number of ping packets to send per interval.  Corresponds to the \"-c\"\n## option of the ping command.\n# count = 1\n\n## Time to wait between sending ping packets in seconds.  Operates like the\n## \"-i\" option of the ping command.\n# ping_interval = 1.0\n\n## If set, the time to wait for a ping response in seconds.  Operates like\n## the \"-W\" option of the ping command.\n# timeout = 3.0\n\n## Interface or source address to send ping from.  Operates like the -I or -S\n## option of the ping command.\n# interface = \"\"\n\n## Use only IPv6 addresses when resolving a hostname.\n# ipv6 = false\n\n## Number of data bytes to be sent. Corresponds to the \"-s\"\n## option of the ping command.\n# size = 56\n\n# max concurrency coroutine\n# concurrency = 50', '', '1732850196', '王杨(822032277)', '1732850196', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('49', '38', '', 'elk-es-master1 elk-es-master2 elk-es-master3 elk-es-node2 elk-es-node3 elk-es-node1 elk-es-node5 elk-es-node4', '', 'es实例端口', '江夏ELK', '0', 'net_response', '# # collect interval\n# interval = 15\n\n[mappings]\n# \"127.0.0.1:22\"= {region=\"local\",ssh=\"test\"}\n# \"127.0.0.1:22\"= {region=\"local\",ssh=\"redis\"}\n\n[[instances]]\ntargets = [\n\":9200\"\n]\nlabels = { project=\"elk-jiangxia\"}\n# # append some labels for series\n# labels = { region=\"cloud\", product=\"n9e\" }\n\n# # interval = global.interval * interval_times\n# interval_times = 1\n\n## Protocol, must be \"tcp\" or \"udp\"\n## NOTE: because the \"udp\" protocol does not respond to requests, it requires\n## a send/expect string pair (see below).\n# protocol = \"tcp\"\n\n## Set timeout\n# timeout = \"1s\"\n\n## Set read timeout (only used if expecting a response)\n# read_timeout = \"1s\"\n\n## The following options are required for UDP checks. For TCP, they are\n## optional. The plugin will send the given string to the server and then\n## expect to receive the given \'expect\' string back.\n## string sent to the server\n# send = \"ssh\"\n## expected string in answer\n# expect = \"ssh', '', '1732867757', '王杨(822032277)', '1732870350', '王杨(822032277)', '1');
INSERT INTO `collect_rule` VALUES ('51', '42', '', 'zy-fat', '', 'ping2', 'zy-fat ping', '0', 'ping', '# # collect interval\n# interval = 15\n\n[[instances]]\n# send ping packets to\ntargets = [\n\"www.baidu.com\"\n]\n\n## Method used for sending pings, can be either \"exec\" or \"native\".  When set\n## to \"exec\" the systems ping command will be executed.  When set to \"native\"\n## the plugin will send pings directly.\n##\n## While the default is \"native\" for backwards compatibility, new deployments\n## are encouraged to use the \"native\" method for improved compatibility and\n## performance.\n# method = \"exec\"\n\n## Specify the ping executable binary.\n# binary = \"ping\"\n\n# # append some labels for series\n# labels = { region=\"cloud\", product=\"n9e\" }\n\n# # interval = global.interval * interval_times\n# interval_times = 1\n\n## Number of ping packets to send per interval.  Corresponds to the \"-c\"\n## option of the ping command.\n# count = 1\n\n## Time to wait between sending ping packets in seconds.  Operates like the\n## \"-i\" option of the ping command.\n# ping_interval = 1.0\n\n## If set, the time to wait for a ping response in seconds.  Operates like\n## the \"-W\" option of the ping command.\n# timeout = 3.0\n\n## Interface or source address to send ping from.  Operates like the -I or -S\n## option of the ping command.\n# interface = \"\"\n\n## Use only IPv6 addresses when resolving a hostname.\n# ipv6 = false\n\n## Number of data bytes to be sent. Corresponds to the \"-s\"\n## option of the ping command.\n# size = 56\n\n# max concurrency coroutine\n# concurrency = 50', '', '1733211601', '王杨(822032277)', '1733211601', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('52', '33', '', 'zy-zj-pro-matrix-web-01 zy-zj-pro-matrix-web-02 zy-zj-pro-matrix-web-03 zy-zj-pro-matrix-web-04 zy-zj-pro-matrix-web-05 zy-zj-pro-matrix-web-06 zy-zj-pro-matrix-web-07 zy-zj-pro-matrix-web-08 zy-zj-pro-matrix-web-09 zy-zj-pro-matrix-web-10 zy-zj-pro-matrix-web-11 zy-zj-pro-matrix-web-12 zy-zj-pro-matrix-web-14 zy-zj-pro-matrix-web-15 zy-zj-pro-matrix-web-13', '', 'matrix-web集群', 'web', '0', 'procstat', '# # collect interval\n# interval = 15\n[[instances]]\nsearch_cmdline_substring = \"php-fpm: master process (/webser/php53/etc/php-fpm.conf)\"\ngather_more_metrics = [\n     \"threads\",\n     \"fd\",\n     \"io\",\n     \"uptime\",\n     \"cpu\",\n     \"mem\",\n     \"limit\",\n#     \"jvm\"\n]\n\n[[instances]]\nsearch_cmdline_substring = \"php-fpm: master process (/webser/php56/etc/php-fpm.conf)\"\ngather_more_metrics = [\n     \"threads\",\n     \"fd\",\n     \"io\",\n     \"uptime\",\n     \"cpu\",\n     \"mem\",\n     \"limit\",\n#     \"jvm\"\n]\n\n[[instances]]\nsearch_cmdline_substring = \"php-fpm: master process (/webser/php7/etc/php-fpm.conf)\"\ngather_more_metrics = [\n     \"threads\",\n     \"fd\",\n     \"io\",\n     \"uptime\",\n     \"cpu\",\n     \"mem\",\n     \"limit\",\n#     \"jvm\"\n]\n\n[[instances]]\nsearch_cmdline_substring = \"rsync --daemon --config=/webser/app/rsync/rsync.conf\"\ngather_more_metrics = [\n     \"threads\",\n     \"fd\",\n     \"io\",\n     \"uptime\",\n     \"cpu\",\n     \"mem\",\n     \"limit\",\n#     \"jvm\"\n]\n\n[[instances]]\nsearch_cmdline_substring = \"mfsmount /webser/res -H mfsmaster\"\ngather_more_metrics = [\n     \"threads\",\n     \"fd\",\n     \"io\",\n     \"uptime\",\n     \"cpu\",\n     \"mem\",\n     \"limit\",\n#     \"jvm\"\n]\n\n\n[[instances]]\n# # executable name (ie, pgrep <search_exec_substring>)\n# search_exec_substring = \"nginx\"\n\n# # pattern as argument for pgrep (ie, pgrep -f <search_cmdline_substring>)\nsearch_cmdline_substring = \"nginx: master process /webser/tengine/sbin/nginx -c /webser/tengine/conf/nginx.conf\"\n\n# # windows service name\n# search_win_service = \"\"\n\n# # append some labels for series\n# labels = { region=\"cloud\", product=\"n9e\" }\n\n# # interval = global.interval * interval_times\n# interval_times = 1\n\n# # mode to use when calculating CPU usage. can be one of \'solaris\' or \'irix\'\n# mode = \"irix\"\n\n# sum of threads/fd/io/cpu/mem, min of uptime/limit\ngather_total = true\n\n# will append pid as tag\ngather_per_pid = false\n\n#  gather jvm metrics only when jstat is ready\n# gather_more_metrics = [\n#     \"threads\",\n#     \"fd\",\n#     \"io\",\n#     \"uptime\",\n#     \"cpu\",\n#     \"mem\",\n#     \"limit\",\n#     \"jvm\"\n# ]', '', '1733380927', '王杨(822032277)', '1733382791', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('53', '33', '', 'zy-zj-pro-matrix-dispatch-01 zy-zj-pro-matrix-dispatch-02 zy-zj-pro-matrix-dispatch-03 zy-zj-pro-matrix-dispatch-04 zy-zj-pro-matrix-dispatch-05 zy-zj-pro-matrix-dispatch-06 zy-zj-pro-matrix-dispatch-07 zy-zj-pro-matrix-dispatch-08 zy-zj-pro-matrix-dispatch-09 zy-zj-pro-matrix-dispatch-10', '', 'dispatch-web集群', 'dispatch', '0', 'procstat', '# # collect interval\n# interval = 15\n[[instances]]\nsearch_cmdline_substring = \"php-fpm: master process (/webser/php56/etc/php-fpm.conf)\"\n[[instances]]\nsearch_cmdline_substring = \"php-fpm: master process (/webser/php7/etc/php-fpm.conf)\"\n[[instances]]\nsearch_cmdline_substring = \"rsync --daemon --config=/webser/app/rsync/rsync.conf\"\n[[instances]]\nsearch_cmdline_substring = \"mfsmount /webser/res -H mfsmaster\"\n[[instances]]\nsearch_cmdline_substring = \"/usr/bin/python /usr/bin/supervisord -c /etc/supervisord.conf\"\n\n[[instances]]\n# # executable name (ie, pgrep <search_exec_substring>)\n# search_exec_substring = \"nginx\"\n\n# # pattern as argument for pgrep (ie, pgrep -f <search_cmdline_substring>)\nsearch_cmdline_substring = \"nginx: master process /webser/tengine/sbin/nginx -c /webser/tengine/conf/nginx.conf\"\n\n# # windows service name\n# search_win_service = \"\"\n\n# # append some labels for series\n# labels = { region=\"cloud\", product=\"n9e\" }\n\n# # interval = global.interval * interval_times\n# interval_times = 1\n\n# # mode to use when calculating CPU usage. can be one of \'solaris\' or \'irix\'\n# mode = \"irix\"\n\n# sum of threads/fd/io/cpu/mem, min of uptime/limit\ngather_total = true\n\n# will append pid as tag\ngather_per_pid = false\n\n#  gather jvm metrics only when jstat is ready\n# gather_more_metrics = [\n#     \"threads\",\n#     \"fd\",\n#     \"io\",\n#     \"uptime\",\n#     \"cpu\",\n#     \"mem\",\n#     \"limit\",\n#     \"jvm\"\n# ]', '', '1733382051', '王杨(822032277)', '1733382805', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('54', '33', '', 'zy-zj-pro-matrix-erpcweb-01 zy-zj-pro-matrix-erpcweb-02', '', 'erpc-web集群', 'erpc', '0', 'procstat', '# # collect interval\n# interval = 15\n[[instances]]\nsearch_cmdline_substring = \"php-fpm: master process (/webser/php53/etc/php-fpm.conf)\"\n#[[instances]]\n#search_cmdline_substring = \"php-fpm: master process (/webser/php56/etc/php-fpm.conf)\"\n[[instances]]\nsearch_cmdline_substring = \"php-fpm: master process (/webser/php7/etc/php-fpm.conf)\"\n[[instances]]\nsearch_cmdline_substring = \"rsync --daemon --config=/webser/app/rsync/rsync.conf\"\n[[instances]]\nsearch_cmdline_substring = \"mfsmount /webser/res -H mfsmaster\"\n#[[instances]]\n#search_cmdline_substring = \"/usr/bin/python /usr/bin/supervisord -c /etc/supervisord.conf\"\n[[instances]]\nsearch_cmdline_substring = \"crond\"\n\n[[instances]]\n# # executable name (ie, pgrep <search_exec_substring>)\n# search_exec_substring = \"nginx\"\n\n# # pattern as argument for pgrep (ie, pgrep -f <search_cmdline_substring>)\nsearch_cmdline_substring = \"nginx: master process /webser/tengine/sbin/nginx -c /webser/tengine/conf/nginx.conf\"\n\n# # windows service name\n# search_win_service = \"\"\n\n# # append some labels for series\n# labels = { region=\"cloud\", product=\"n9e\" }\n\n# # interval = global.interval * interval_times\n# interval_times = 1\n\n# # mode to use when calculating CPU usage. can be one of \'solaris\' or \'irix\'\n# mode = \"irix\"\n\n# sum of threads/fd/io/cpu/mem, min of uptime/limit\ngather_total = true\n\n# will append pid as tag\ngather_per_pid = false\n\n#  gather jvm metrics only when jstat is ready\n# gather_more_metrics = [\n#     \"threads\",\n#     \"fd\",\n#     \"io\",\n#     \"uptime\",\n#     \"cpu\",\n#     \"mem\",\n#     \"limit\",\n#     \"jvm\"\n# ]\n', '', '1733382169', '王杨(822032277)', '1733382839', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('55', '33', '', 'zy-zj-pro-matrix-admin-01', '', 'matrix-admin-01', 'matrix-admin-01', '0', 'procstat', '# # collect interval\n# interval = 15\n[[instances]]\nsearch_cmdline_substring = \"php-fpm: master process (/webser/php53/etc/php-fpm.conf)\"\n[[instances]]\nsearch_cmdline_substring = \"php-fpm: master process (/webser/php56/etc/php-fpm.conf)\"\n[[instances]]\nsearch_cmdline_substring = \"php-fpm: master process (/webser/php7/etc/php-fpm.conf)\"\n[[instances]]\nsearch_cmdline_substring = \"rsync --daemon --config=/webser/app/rsync/rsync.conf\"\n[[instances]]\nsearch_cmdline_substring = \"mfsmount /webser/res -H mfsmaster\"\n[[instances]]\nsearch_cmdline_substring = \"/usr/bin/python /usr/bin/supervisord -c /etc/supervisord.conf\"\n[[instances]]\nsearch_cmdline_substring = \"crond\"\n\n[[instances]]\n# # executable name (ie, pgrep <search_exec_substring>)\n# search_exec_substring = \"nginx\"\n\n# # pattern as argument for pgrep (ie, pgrep -f <search_cmdline_substring>)\nsearch_cmdline_substring = \"nginx: master process /webser/tengine/sbin/nginx -c /webser/tengine/conf/nginx.conf\"\n\n# # windows service name\n# search_win_service = \"\"\n\n# # append some labels for series\n# labels = { region=\"cloud\", product=\"n9e\" }\n\n# # interval = global.interval * interval_times\n# interval_times = 1\n\n# # mode to use when calculating CPU usage. can be one of \'solaris\' or \'irix\'\n# mode = \"irix\"\n\n# sum of threads/fd/io/cpu/mem, min of uptime/limit\ngather_total = true\n\n# will append pid as tag\ngather_per_pid = false\n\n#  gather jvm metrics only when jstat is ready\n# gather_more_metrics = [\n#     \"threads\",\n#     \"fd\",\n#     \"io\",\n#     \"uptime\",\n#     \"cpu\",\n#     \"mem\",\n#     \"limit\",\n#     \"jvm\"\n# ]', '', '1733382358', '王杨(822032277)', '1733389153', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('56', '33', '', 'zy-zj-pro-matrix-admin-02', '', 'matrix-admin-02', 'matrix-admin-02', '0', 'procstat', '# # collect interval\n# interval = 15\n[[instances]]\nsearch_cmdline_substring = \"php-fpm: master process (/webser/php53/etc/php-fpm.conf)\"\n[[instances]]\nsearch_cmdline_substring = \"php-fpm: master process (/webser/php56/etc/php-fpm.conf)\"\n[[instances]]\nsearch_cmdline_substring = \"php-fpm: master process (/webser/php7/etc/php-fpm.conf)\"\n[[instances]]\nsearch_cmdline_substring = \"rsync --daemon --config=/webser/app/rsync/rsync.conf\"\n[[instances]]\nsearch_cmdline_substring = \"mfsmount /webser/res -H mfsmaster\"\n\n[[instances]]\nsearch_cmdline_substring = \"crond\"\n\n[[instances]]\n# # executable name (ie, pgrep <search_exec_substring>)\n# search_exec_substring = \"nginx\"\n\n# # pattern as argument for pgrep (ie, pgrep -f <search_cmdline_substring>)\nsearch_cmdline_substring = \"nginx: master process /webser/tengine/sbin/nginx -c /webser/tengine/conf/nginx.conf\"\n\n# # windows service name\n# search_win_service = \"\"\n\n# # append some labels for series\n# labels = { region=\"cloud\", product=\"n9e\" }\n\n# # interval = global.interval * interval_times\n# interval_times = 1\n\n# # mode to use when calculating CPU usage. can be one of \'solaris\' or \'irix\'\n# mode = \"irix\"\n\n# sum of threads/fd/io/cpu/mem, min of uptime/limit\ngather_total = true\n\n# will append pid as tag\ngather_per_pid = false\n\n#  gather jvm metrics only when jstat is ready\n# gather_more_metrics = [\n#     \"threads\",\n#     \"fd\",\n#     \"io\",\n#     \"uptime\",\n#     \"cpu\",\n#     \"mem\",\n#     \"limit\",\n#     \"jvm\"\n# ]', '', '1733383356', '王杨(822032277)', '1733383361', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('57', '33', '', 'zy-zj-pro-matrix-erpchaproxy-01 zy-zj-pro-matrix-erpchaproxy-02', '', 'haproxy集群', 'haproxy', '0', 'haproxy', '[[instances]]\n# URI on which to scrape HAProxy.\n# e.g. \n# uri = \"http://localhost:5000/baz?stats;csv\"\n# uri = \"http://user:pass@haproxy.example.com/haproxy?stats;csv\"\n# uri = \"unix:/run/haproxy/admin.sock\"\nuri = \"http://admin:zC6Lq9%7ECk%28uEN%7Dz%7B@127.0.0.1:1080/stats;csv\"\n\n# Flag that enables SSL certificate verification for the scrape URI\nssl_verify = false\n\n# Comma-separated list of exported server metrics. See http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#9.1\nserver_metric_fields = \"\"\n\n# Comma-separated list of exported server states to exclude. See https://cbonte.github.io/haproxy-dconv/1.8/management.html#9.1, field 17 status\nserver_exclude_states = \"\"\n\n# Timeout for trying to get stats from HAProxy.\ntimeout = \"5s\"\n\n# Flag that enables using HTTP proxy settings from environment variables ($http_proxy, $https_proxy, $no_proxy)\nproxy_from_env = false', '', '1733387499', '王杨(822032277)', '1733387499', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('58', '25', '', 'zy-wh-fat-yiqiyoo-yoodb-01', '', '小游问答测试服数据库', '小游问答', '0', 'mysql', '# # collect interval\n# interval = 15\n\n[[instances]]\n address = \"127.0.0.1:3306\"\n username = \"monitor\"\n password = \"8622d31807580846b77f19ae0dfb7a24^A\"\n\n# # set tls=custom to enable tls\n# parameters = \"tls=false\"\n\n# extra_status_metrics = true\n# extra_innodb_metrics = false\n# gather_processlist_processes_by_state = false\n# gather_processlist_processes_by_user = false\n# gather_schema_size = true\n# gather_table_size = false\n# gather_system_table_size = false\n# gather_slave_status = true\n\n# # timeout\n# timeout_seconds = 3\n\n# # interval = global.interval * interval_times\n# interval_times = 1\n\n# important! use global unique string to specify instance\n labels = { instance=\"yiqiyoo-fat-yoo:3306\" }\n\n## Optional TLS Config\n# use_tls = false\n# tls_min_version = \"1.2\"\n# tls_ca = \"/etc/categraf/ca.pem\"\n# tls_cert = \"/etc/categraf/cert.pem\"\n# tls_key = \"/etc/categraf/key.pem\"\n## Use TLS but skip chain & host verification\n# insecure_skip_verify = true\n\n#[[instances.queries]]\n# mesurement = \"lock_wait\"\n# metric_fields = [ \"total\" ]\n# timeout = \"3s\"\n# request = \'\'\'\n#SELECT count(*) as total FROM information_schema.innodb_trx WHERE trx_state=\'LOCK WAIT\'\n#\'\'\'\n\n# [[instances.queries]]\n# mesurement = \"users\"\n# metric_fields = [ \"total\" ]\n# label_fields = [ \"service\" ]\n# # field_to_append = \"\"\n# timeout = \"3s\"\n# request = \'\'\'\n# select \'n9e\' as service, count(*) as total from n9e_v5.users\n# \'\'\'', '', '1733452755', '王杨(822032277)', '1733452755', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('59', '26', '', 'zy-hb-personsupplier-db01', '', '个人供应商db', '数据库', '0', 'mysql', '# # collect interval\n# interval = 15\n\n[[instances]]\naddress = \"/webser/mysql57_33066/var/mysql57_33066.sock\"\nusername = \"root\"\npassword = \"VyUG2rLYzK7JdEd3ucu3\"\nlabels = { instance=\"person-supplier-pro:33066\" }\n# # set tls=custom to enable tls\n# parameters = \"tls=false\"\n\n# extra_status_metrics = true\n# extra_innodb_metrics = false\n# gather_processlist_processes_by_state = false\n# gather_processlist_processes_by_user = false\n# gather_schema_size = true\n# gather_table_size = false\n# gather_system_table_size = false\n# gather_slave_status = true\n\n# # timeout\n# timeout_seconds = 3\n\n# # interval = global.interval * interval_times\n# interval_times = 1\n\n# important! use global unique string to specify instance\n# labels = { instance=\"n9e-10.2.3.4:3306\" }\n\n## Optional TLS Config\n# use_tls = false\n# tls_min_version = \"1.2\"\n# tls_ca = \"/etc/categraf/ca.pem\"\n# tls_cert = \"/etc/categraf/cert.pem\"\n# tls_key = \"/etc/categraf/key.pem\"\n## Use TLS but skip chain & host verification\n# insecure_skip_verify = true\n\n#[[instances.queries]]\n# mesurement = \"lock_wait\"\n# metric_fields = [ \"total\" ]\n# timeout = \"3s\"\n# request = \'\'\'\n#SELECT count(*) as total FROM information_schema.innodb_trx WHERE trx_state=\'LOCK WAIT\'\n#\'\'\'\n\n# [[instances.queries]]\n# mesurement = \"users\"\n# metric_fields = [ \"total\" ]\n# label_fields = [ \"service\" ]\n# # field_to_append = \"\"\n# timeout = \"3s\"\n# request = \'\'\'\n# select \'n9e\' as service, count(*) as total from n9e_v5.users\n# \'\'\'', '', '1733464534', '王杨(822032277)', '1733718246', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('60', '55', '', 'zy-zj-pro-matrixad-evidence-db-01', '', 'redis文件上传队列', 'key file:upload:queue:', '0', 'redis', '[[instances]]\naddress = \"127.0.0.1:6380\"\npassword = \"1c654049cf08788b69cf188e54911c15\"\ncommands = [\n     {command = [\"llen\", \"file:upload:queue:\"], metric = \"file_upload_queue\"},\n]\nlabels = { instance=\"matrixad-evidence-172.21.29.186:6380\" }', '', '1733816774', '王杨(822032277)', '1733816897', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('61', '55', '', 'zy-zj-pro-matrixad-evidence-db-01', '', 'mysql监控', '去广告留证', '0', 'mysql', '[[instances]]\naddress = \"/webser/app/mysql_3306/data/mysql.sock\"\nusername = \"root\"\npassword = \"QWERT!@#$%\"\nextra_status_metrics = true\ngather_processlist_processes_by_state = false\ngather_processlist_processes_by_user = false\nlabels = { instance=\"matrixad-evidence-172.21.29.186:3306\" }', '', '1733817081', '王杨(822032277)', '1733817211', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('62', '55', '', 'zy-wh-fat-matrixad-evidence-db-01', '', '统计看板程序', '上传统计看板', '0', 'procstat', '# # collect interval\n# interval = 15\n[[instances]]\nsearch_cmdline_substring = \"/webser/app/matrix_ad_tj/matrix-ad-tj\"\ngather_more_metrics = [\n     \"threads\",\n     \"fd\",\n     \"io\",\n     \"uptime\",\n     \"cpu\",\n     \"mem\",\n     \"limit\",\n#     \"jvm\"\n]', '', '1733817935', '王杨(822032277)', '1733910652', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('63', '25', '', 'zy-js-pro-yiqiyoo-yoodb-01', '', '小游问答生产环境数据库', '小游问答、言灵', '0', 'mysql', '[[instances]]\n address = \"127.0.0.1:3306\"\n username = \"monitor\"\n password = \"2ef568f09c7e70ee3eec97c2f3e83f3d^A\"\nlabels = { instance=\"yiqiyoo-pro-yoo:3306\" }', '', '1733889837', '王杨(822032277)', '1733889837', '王杨(822032277)', '0');
INSERT INTO `collect_rule` VALUES ('64', '62', '', 'zy-zj-pro-weplay-mysqlbigdata-01', '', 'Mysql监控', 'Mysql监控', '0', 'mysql', '# 定义mysql采集周期，单位是秒\ninterval = 15\n\n# 定义全局要执行的自定义SQL，每个instance都会执行\n# 注意这里是 [[queries]]，而不是 [[instances.queries]]，[[queries]]是全局的，[[instances.queries]]是针对某个instance的\n#[[queries]]\n#mesurement = \"lock_wait\"\n#metric_fields = [ \"total\" ]\n#timeout = \"3s\"\n#request = \'\'\'\n#SELECT count(*) as total FROM information_schema.innodb_trx WHERE trx_state=\'LOCK WAIT\'\n#\'\'\'\n\n# 定义instance， 一个instance对应一个mysql实例\n# 指定连接信息,确保连接账户有只读相关权限；\n#GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO \'monitor\'@\'127.0.0.1\';\n\n[[instances]]\n#如果ip地址采集不通请使用sock文件连接\n#address = \"/webser/mysql57_33066/var/mysql57_33066.sock\"\naddress = \"127.0.0.1:33066\"\nusername = \"zabbix\"\npassword = \"zabbix\"\n\n# 为 mysql 实例附加一些标签，比如上面的例子中提到的 instance 标签\nlabels = { instance=\"weplay-mysqlbigdata:33066\" }\n\n# 是否使用 tls 等定制参数\nparameters = \"tls=false\"\n\n# 通过 show global status 监控 mysql，默认抓取一些基础指标，\n# 如果想抓取更多 global status 的指标，把下面的配置设置为 true\n#extra_status_metrics = true\n\n# 通过show global variables 监控 mysql 的全局变量，默认抓取一些常规的\n# 常规的基本够用了，扩展的部分如果也想采集，下面的配置设置为 true\nextra_innodb_metrics = true\n\n# 监控 processlist，关注较少，默认不采集\n#gather_processlist_processes_by_state = false\n#gather_processlist_processes_by_user = false\n\n# 监控各个数据库的磁盘占用大小，如果你的 DB 很大，可能会很耗时，不建议采集，用处不大\n#gather_schema_size = false\n\n# 监控所有的 table 的磁盘占用大小，如果你的 DB 很大，可能会很耗时，不建议采集，用处不大\n#gather_table_size = false\n\n# 是否采集系统表的大小，通常不用，所以默认设置为false\n#gather_system_table_size = false\n\n# 通过 show slave status 监控 slave 的情况，比较关键，所以默认采集\n#gather_slave_status = true\n\n# 超时时间\n#timeout_seconds = 3\n\n# 采集周期的倍数，比如设置为2，那么采集周期就是 interval * 2\n#interval_times = 1\n\n# tls 相关配置，可选配置\n#use_tls = false\n#tls_min_version = \"1.2\"\n#tls_ca = \"/etc/categraf/ca.pem\"\n#tls_cert = \"/etc/categraf/cert.pem\"\n#tls_key = \"/etc/categraf/key.pem\"\n# Use TLS but skip chain & host verification\n#insecure_skip_verify = true\n\n# 定义只针对当前 mysql 实例的自定义 sql\n#[[instances.queries]]\n#mesurement = \"lock_wait\"\n#metric_fields = [ \"total\" ]\n#timeout = \"3s\"\n#request = \'\'\'\n#SELECT count(*) as total FROM information_schema.innodb_trx WHERE trx_state=\'LOCK WAIT\'\n#\'\'\'', '', '1733900455', '张海波(813030609)', '1733900455', '张海波(813030609)', '0');
INSERT INTO `collect_rule` VALUES ('65', '70', '', 'zy-hb-pro-ai-nebula-db-02', '', 'ai-nebula-db-02', 'ai-nebula-db-02', '0', 'mysql', '# MySql监控,确保连接账户有只读相关权限：\n#GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO \'monitor\'@\'127.0.0.1\';\n\n#####如不关注下文的详细说明,可参考使用下面的配置;删除#注释,修改连接和lables信息\n\n[[instances]]\naddress = \"/var/lib/sk-mysql_33066/mysql.sock\"\nusername = \"monitor\"\npassword = \"8cbf918003c9b27aebfc4a1a742b573c^A\"\nextra_status_metrics = true\nextra_innodb_metrics = true\ngather_processlist_processes_by_state = true\ngather_processlist_processes_by_user = true\ngather_schema_size = true\ngather_table_size = false\ngather_system_table_size = true\ngather_slave_status = true\nlabels = { instance=\"ai-nebula-02-172.22.11.47:33066\" }\n\n###如不关注下文的详细说明,可参考使用上面的配置;删除#注释,修改连接和lables信息\n#########################################################################\n\n####如果使用了上面的示例配置,以下所有的内容可以全部删除\n######################################################\n\n# 定义mysql采集周期，单位是秒\ninterval = 15\n', '', '1733910932', '邓旋(824112839)', '1733911527', '邓旋(824112839)', '0');
INSERT INTO `collect_rule` VALUES ('66', '32', '', 'zy-js-pro-yunyouxi-liantong-01 zj-yunyouxi-jiedianzineng1 yunyouxi-jiedianzineng-yidong.novalocal yunyouxi-jiedianzineng-liantong.novalocal zy-js-pro-yunyouxi-yidong-01', '', 'turnserver', '进程存活', '0', 'procstat', '# # collect interval\n# interval = 15\n[[instances]]\nsearch_cmdline_substring = \"turnserver -o\"\ngather_more_metrics = [\n     \"threads\",\n     \"fd\",\n     \"io\",\n     \"uptime\",\n     \"cpu\",\n     \"mem\",\n     \"limit\",\n#     \"jvm\"\n]', '', '1733974540', '邓旋(824112839)', '1733984658', '邓旋(824112839)', '0');
